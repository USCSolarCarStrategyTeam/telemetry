from Tkinter import *
import os
from socket import *

#Client Stuff
host = "127.0.0.1"
#host = "10.123.117.23" 
port = 13000
addr = (host, port)
UDPSock = socket(AF_INET, SOCK_DGRAM)
#UDPSock.connect((host,port))
print "Connected!!!"


def get_data():
	a = str(w1.get())
	b = str(w2.get())
	c = str(w3.get())
	d = str(w4.get())
	e = str(w5.get())
	f = str(w6.get())
	g = str(w7.get())
	h = str(w8.get())
	i = str(w9.get())
	j = str(w10.get())
	k = str(w11.get())
	l = str(w12.get())
	m = str(w13.get())
	n = str(w14.get())
	o = str(w15.get())
	data = "Value1:" + a + ";" + "Value2:" + b + ";" "Value3:" + c + ";" + "Value4:" + d + ";" + "Value5:" + e + ";" + "Value6:" + f + ";" + "Value7" + g + ";" + "Value8:" + h + ";" + "Value9:" + i + ";" + "Value10:" + j + ";" + "Value11:" + k + ";" + "Value12:" + l + ";" + "Value13:" + m + "Value14:" + n + ";" + "Value15:" + o + ";" 
	UDPSock.sendto(data, addr)
	master.after(1000, get_data)
	
#Slider Stuff
master = Tk()
w1_label = Label(master, text="Value1")
w1_label.pack()
w1 = Scale(master, from_=0, to=42, orient=HORIZONTAL)
w1.pack()
w1.set(21)
w2_label = Label(master, text="Value2")
w2_label.pack()
w2 = Scale(master, from_=0, to=200, orient=HORIZONTAL)
w2.pack()
w2.set(100)
w3_label = Label(master, text="Value3")
w3_label.pack()
w3 = Scale(master, from_=0, to=154, orient=HORIZONTAL)
w3.pack()
w3.set(77)
w4_label = Label(master, text="Value4")
w4_label.pack()
w4 = Scale(master, from_=0, to=154, orient=HORIZONTAL)
w4.pack()
w4.set(77)
w5_label = Label(master, text="Value5")
w5_label.pack()
w5 = Scale(master, from_=0, to=154, orient=HORIZONTAL)
w5.pack()
w5.set(77)
w6_label = Label(master, text="Value6")
w6_label.pack()
w6 = Scale(master, from_=0, to=154, orient=HORIZONTAL)
w6.pack()
w6.set(77)
w7_label = Label(master, text="Value7")
w7_label.pack()
w7 = Scale(master, from_=0, to=154, orient=HORIZONTAL)
w7.pack()
w7.set(77)
w8_label = Label(master, text="Value8")
w8_label.pack()
w8 = Scale(master, from_=0, to=154, orient=HORIZONTAL)
w8.pack()
w8.set(77)
w9_label = Label(master, text="Value9")
w9_label.pack()
w9 = Scale(master, from_=0, to=154, orient=HORIZONTAL)
w9.pack()
w9.set(77)
w10_label = Label(master, text="Value10")
w10_label.pack()
w10 = Scale(master, from_=0, to=154, orient=HORIZONTAL)
w10.pack()
w10.set(77)
w11_label = Label(master, text="Value11")
w11_label.pack()
w11 = Scale(master, from_=0, to=154, orient=HORIZONTAL)
w11.pack()
w11.set(77)
w12_label = Label(master, text="Value12")
w12_label.pack()
w12 = Scale(master, from_=0, to=154, orient=HORIZONTAL)
w12.pack()
w12.set(77)
w13_label = Label(master, text="Value13")
w13_label.pack()
w13 = Scale(master, from_=0, to=154, orient=HORIZONTAL)
w13.pack()
w13.set(77)
w14_label = Label(master, text="Value14")
w14_label.pack()
w14 = Scale(master, from_=0, to=234, orient=HORIZONTAL)
w14.pack()
w14.set(77)
w15_label = Label(master, text="Value15")
w15_label.pack()
w15 = Scale(master, from_=0, to=34, orient=HORIZONTAL)
w15.pack()
w15.set(77)

counter = 0
while counter < 100:
	master.after(1000, get_data)
	master.mainloop()
	counter = counter + 1
	'''if x == '0':
		break'''
UDPSock.close()
os._exit(0)


